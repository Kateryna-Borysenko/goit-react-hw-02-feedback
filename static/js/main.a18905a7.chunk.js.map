{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/App/App.module.css","components/App/Container/Container.module.css","images/feedback.jpeg","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App/Container/Container.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","percentage","className","styles","statistics","feedback","feedbackValue","positiveFeedback","feedbackValuePercentage","FeedbackOptions","categories","onClickBtn","wrap","map","category","btn","type","onClick","Section","title","children","Notification","message","propType","PropTypes","string","isRequired","Container","s","container","App","state","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","ceil","this","image","src","alt","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a18905a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Statistics_feedback__2-2c_\",\"feedbackValue\":\"Statistics_feedbackValue__uypVe\",\"total\":\"Statistics_total__2pGqP\",\"positiveFeedback\":\"Statistics_positiveFeedback__2nbrn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"FeedbackOptions_wrap__3Obh3\",\"btn\":\"FeedbackOptions_btn__1rp9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1YcTA\",\"image\":\"App_image__2InBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Boit\"};","export default __webpack_public_path__ + \"static/media/feedback.d34b5374.jpeg\";","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, percentage }) => {\n  return (\n    <div className={styles.statistics}>\n      <p className={styles.feedback}>\n        Good: <span className={styles.feedbackValue}>{good}</span>\n      </p>\n      <p className={styles.feedback}>\n        Neutral: <span className={styles.feedbackValue}>{neutral}</span>\n      </p>\n      <p className={styles.feedback}>\n        Bad: <span className={styles.feedbackValue}>{bad}</span>\n      </p>\n      <p className={styles.total}>\n        Total: <span className={styles.feedbackValue}>{total}</span>\n      </p>\n      <p className={styles.positiveFeedback}>\n        Positive feedback:{' '}\n        <span className={styles.feedbackValuePercentage}>{percentage} %</span>\n      </p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ categories, onClickBtn }) => (\n  <div className={styles.wrap}>\n    {categories.map(category => (\n      <button\n        key={category} //без уникал ключа даёт ошибку\n        className={styles.btn}\n        type=\"button\"\n        onClick={() => onClickBtn(category)} //aнанимная ф-ция которая сработает при клике\n      >\n        {category}\n      </button>\n    ))}\n  </div>\n);\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {/* title - по умолчанию */}\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string, //может прийти, а может и нет;\n};\nexport default Section;\n","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return (\n    <div>\n      <p className={styles.message}>{message}</p>\n    </div>\n  );\n};\nNotification.propType = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React from 'react';\nimport s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React, { Component } from 'react';\nimport image from 'images/feedback.jpeg';\nimport Statistics from 'components/Statistics/Statistics';\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions';\nimport Section from 'components/Section/Section';\nimport Notification from 'components/Notification/Notification';\nimport styles from 'components/App/App.module.css';\nimport Container from './Container/Container';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  // eсли нужно изменить state делаем это через метод setState()\n  onClickBtn = category => {\n    this.setState({ [category]: this.state[category] + 1 });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    //получаю данные состояния\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const good = this.state.good; //\n    //Math.ceil()-> округление до большего целого\n    //eсли total -> есть то считаем, если ничего не выбрано значение 0 без проверки NaN\n    return total ? Math.ceil((good / total) * 100) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Container>\n        <h1 className={styles.title}>Please Leave Your</h1>\n        <img className={styles.image} src={image} alt=\"Feedback\" />\n        <FeedbackOptions\n          categories={['good', 'neutral', 'bad']}\n          onClickBtn={this.onClickBtn} //cсылка на ф-цию\n        />\n\n        <Section title=\"Statistics\">\n          {/* диструктуризация строка 19*/}\n\n          {/*  блок Statistics рендерился только после того, как был собран хотя бы один отзыв */}\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()} //результат вызова\n              percentage={this.countPositiveFeedbackPercentage()} //результат вызова\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}